var _user$project$Main$renderClassromItem = function (classroom) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('cs-course-list__item mdl-shadow--4dp'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(classroom.name),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$renderClassromList = F2(
	function (err, classrooms) {
		return _elm_lang$core$List$isEmpty(classrooms) ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('mdl-tabs__panel'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(err),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$ul,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('cs-course-list'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (x) {
					return A2(
						_elm_lang$html$Html$li,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _user$project$Main$renderClassromItem(x),
							_1: {ctor: '[]'}
						});
				},
				classrooms));
	});
var _user$project$Main$renderEnrolledCourses = function (classrooms) {
	return A2(_user$project$Main$renderClassromList, 'You are not enrolled in any courses!', classrooms);
};
var _user$project$Main$renderOtherCourses = function (classrooms) {
	return A2(_user$project$Main$renderClassromList, 'No courses available!', classrooms);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'SelectEnrolledClassroomsList') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{showEnrolledClassrooms: _p0._0});
		} else {
			return model;
		}
	});
var _user$project$Main$classroom = {
	name: '',
	slug: '',
	shortDescription: '',
	longDescription: {ctor: '[]'},
	teacher: _user$project$Codeschool_User$empty,
	students: {ctor: '[]'},
	staff: {ctor: '[]'},
	weeklyLessons: false,
	acceptSubscriptions: true
};
var _user$project$Main$classroomFake = _elm_lang$core$Native_Utils.update(
	_user$project$Main$classroom,
	{name: 'Elm', slug: 'elm', shortDescription: 'A course on the Elm language'});
var _user$project$Main$model = {
	user: _user$project$Codeschool_User$fake,
	showEnrolledClassrooms: true,
	classrooms: {
		enrolled: {ctor: '[]'},
		other: {ctor: '[]'}
	}
};
var _user$project$Main$modelFake = function () {
	var cls = _user$project$Main$model.classrooms;
	return _elm_lang$core$Native_Utils.update(
		_user$project$Main$model,
		{
			classrooms: _elm_lang$core$Native_Utils.update(
				cls,
				{
					enrolled: {
						ctor: '::',
						_0: _user$project$Main$classroomFake,
						_1: {ctor: '[]'}
					}
				})
		});
}();
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {user: a, showEnrolledClassrooms: b, classrooms: c};
	});
var _user$project$Main$Classroom = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {name: a, slug: b, shortDescription: c, longDescription: d, teacher: e, students: f, staff: g, weeklyLessons: h, acceptSubscriptions: i};
	});
var _user$project$Main$SelectEnrolledClassroomsList = function (a) {
	return {ctor: 'SelectEnrolledClassroomsList', _0: a};
};
var _user$project$Main$mainTabs = function (model) {
	var selectedTab = model.showEnrolledClassrooms ? _user$project$Main$renderEnrolledCourses(model.classrooms.enrolled) : _user$project$Main$renderOtherCourses(model.classrooms.other);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('mdl-tabs mdl-js-tabs mdl-js-ripple-effect'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('mdl-tabs__tab-bar'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('mdl-tabs__tab is-active'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Main$SelectEnrolledClassroomsList(true)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Enrolled'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$a,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('mdl-tabs__tab'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Main$SelectEnrolledClassroomsList(false)),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Other'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: selectedTab,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main_ = function (model) {
	return A2(
		_elm_lang$html$Html$main_,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('cs-stripes-layout__main'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('cs-stripes-layout__content'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(_user$project$Codeschool_Page$contentHeader, 'List of courses', 'This lists shows all courses available to you in the codeschool application'),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _user$project$Main$mainTabs(model),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$view = function (_p1) {
	var _p2 = _p1;
	var head_ = {
		ctor: '::',
		_0: _user$project$Codeschool_Page$header,
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('cs-body'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('mdl-grid mdl-grid mdl-grid--no-spacing'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('content-area'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('cs-stripes-layout'),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _user$project$Main$main_(_p2),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('cs-base-page'),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$html$Html_Attributes$attribute, 'unresolved', 'unresolved'),
				_1: {ctor: '[]'}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			head_,
			{
				ctor: '::',
				_0: _user$project$Codeschool_Page$footer,
				_1: {ctor: '[]'}
			}));
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$modelFake, view: _user$project$Main$view, update: _user$project$Main$update})();
var _user$project$Main$SelectClassroom = function (a) {
	return {ctor: 'SelectClassroom', _0: a};
};
